If you want to archive device types that are not yet supported - you must create expect 
scripts xxx.get.telnet, and/or xxx.get.ssh (where xxx is the device platform name, 
vendor name, or some other meaningful label), and add them to "helpers" directory. 
then you can specify xxx in the router.db file as the device_platform name.

For example: create expect script that can get configuration from some linksys router via telnet,
name it: linksys.get.telnet and add the following line in the router.db: 
somelinksys.router.net:linksys:set01:telnet

Where set01 is the name of authentication set configured in main config file.
If you have configured scheduled config archiving  - config of somelinksys.router.net will be archived 
and versioned in your SVN repository at the intervals specified at ScheduleBackup config line.

Arguments passed to the expect script:

 argv 0 - hostname to connect to
 argv 1 - username from specified auth set
 argv 2 - password from specified auth set
 argv 3 - enable password from specified auth set

You can use argv 1 to 3 as you wish, but at the exit of your expect script you must have the file
<hostname>.new in the working directory of a daemon, wchich will contain record of an equivalent of
cisco "write term"  command. you achieve this by issuing "log_file -a -noappend [lindex $argv 0].new" 
in your expect script just before issuing equivalent of "write term" command. (see cisco.get.telnet, or
cisco.get.ssh for example of config pull script).
 
Next thing is to create <platform_name>.process perl script - here you can post-process downloaded
config to remove some unneeded lines (this is not required - the script is optional).

