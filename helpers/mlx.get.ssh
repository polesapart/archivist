#
# Archivist internal expect script
#
# mlx.get.ssh - method for getting configuration by SSH from a Brocade MLX/Foundry routers
#

set timeout 15

log_user 0
spawn ssh -l [lindex $argv 1] [lindex $argv 0]

expect {
  eof {exit}
  "ssword:" {send "[lindex $argv 2]\r"}
  "yes/no"
   {
    send "yes\r"
    expect "ssword:"
    send "[lindex $argv 2]\r"
   }
  default {exit}
  timeout {exit}
 }

expect {
  ">"
   {
    send "enable\r"
    expect {
     "ssword:" {send "[lindex $argv 3]\r"}
     "ame:"
      {
       send "[lindex $argv 1]\r"
       expect "ssword:"
       send "[lindex $argv 3]\r"
      }
     }
    }
  timeout {exit}
  "uthenticaion failed" {exit}
  "#" {send "\r"}
 }

expect {
  "#" {send "\r"}
  "uthentication failed" {exit}
  "ssword:" {exit}
   timeout {exit}  
  }

#if we are logged in now, we should be able to catch prompt:
set prompt "$expect_out(buffer)"
set prompt [string trim $prompt "\r"]
set prompt [string trim $prompt "\n"]
set prompt [string trim $prompt]

expect $prompt

send "term length 0\r"

expect {
  "ame:" {exit}
  "ssword:" {exit}
  $prompt {send "\r"}
 }

log_file -a -noappend [lindex $argv 0].new
set timeout 30
send "write term\r"

expect {
  $prompt {send "\r"}
  "uthentication failed" {exit}
  "ssword:" {exit}
   timeout {exit}
   eof {exit}
  }

expect $prompt
log_file
send "exit\r"
send "exit\r"
expect "host."

