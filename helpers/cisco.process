# Archivist - network device config archiver
#
# this is a perl script for post-processing downloaded cisco IOS config file 
# in short - load, filter as you wish, and save to the same filename
#

$conf_file=$ARGV[0];

open(DAT, $conf_file);
@conf_text=<DAT>;
close(DAT);
open(DAT, '>'.$conf_file);  # rewrite downloaded config file

$line = 0;

foreach $confline (@conf_text)
 {

   # remove some unneeded lines from the config file
   # you can add something here to be filtered out from the archived IOS config
   
   if(($confline=~/Current configuration/) ||   
      ($confline=~/Last configuration/) ||      
      ($confline=~/NVRAM config last/) ||
      ($confline=~/Building configuration/) ||
      ($confline=~/Generating configuration/) ||
      ($confline=~/No configuration change since/) ||
      ($confline=~/Non-Volatile memory is in use/) ||
      ($confline=~/Error on initialize VLAN database/) ||
      ($confline=~/Cryptochecksum/) ||
      ($confline=~/\[OK\]/) ||                 # OK displayed by FWSM after listing config
      ($confline=~/^\r$/) ||                   # various kinds of empty lines
      ($confline=~/^$/) ||                     #
      ($confline=~/^ntp clock-period/) ||      # clock-period is skipped
      ($confline=~/^([^#]+#)/) ||              # "enabled" prompt of IOS device (stolen from rancid)
      (($confline=~/^!\r$/) && ($line < 3)) || # strip exclamation marks from the head of running-config
      ($confline=~/write term/))
    {next;} 

   else {print DAT $confline;}
   $line++;
 }

print DAT "\n";

close(DAT);

undef @conf_text;

# end
