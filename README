1. GENERAL INFO

Archivist - a network device config archiver / versioner using Subversion repository

Archivist can archive and version text configuration files from any snmp/telnet/ssh enabled
network device (routers, switches, etc...). 

Archivist has two methods of archiving device config: 
- scheduled config archiving - archive device configuration periodically
- second method is to continuously listen to syslog UDP datagrams, or tail specified syslog 
  file in search for a defined CONFIG event messages (ie: Cisco's SYS-5-CONFIG_I), and
  trigger archiving immediately when such an event occurs.

Second method allowes for very detailed config change audit (especially if some form of user-based
authentication such as radius/tacacs is implemented in the network). Every config change can be commited
to svn (and changelog logfile) along with username of user who changed the config (in fact, commit to
SVN is done "as" username from router login).

Archivist owns big credit to Rancid - similiar router config archiving tool written in Perl 
(more info about rancid at: http://www.shrubbery.net/rancid/)


2. INSTALLATION

To create "configure" script, first run ./autogen.sh

Options to configure script:

--enable-mysql - this will disable file-based router.db and logging, and will enable MYSQL-based 
router.db and logging. MYSQL-driven archivist will eventually get some kind od web interface to manage
system configuration, browse device configs and device config changelogs, but for now it's a work-in-progress
with no means to access config or logs stored in the database.

To compile, you must have the following libraries installed:

 - python - C development environment (libpython.so) 
 - pthreads library
 - subversion (at least 1.6) 
 - apache portable runtime (it's needed to compile subversion, so it should 
                            already be installed in the previous step) 
 - net-snmp development environment
 - mysql development libraries (if you'll enable MYSQL storage)

Requirements to run:

 - working ssh client and (or) telnet binaries for internal config get method
 - working Tcl expect binary for internal config get method
 - working Rancid install for rancid config get method
 - empty SVN repository created locally (URL of file://<local repository path>)
   (use "svnadmin create <path>" command to create empty SVN repository)
   Default SVN path is /usr/local/archivist-svn

Basic steps to configure (after ./configure; make; make install):

 - to configure your archivization system, you need to edit /usr/local/etc/archivist.conf.dist,
   and change name of this file to archivist.conf
   In the config file, specify location of the router.db, svn repository, archiving method,
   and - if you want to use internal config download method - at least one authentication set
   (login/password for device access). if you want to use Rancid for config download - you
   must have complete rancid installation, and valid .cloginrc file. Rancid is used here only to
   the point of getting <hostname>.new file. It is not used for SVN commit.

 - you need to create rancid-stylish router.db - database of config-versioned devices.
   Archivist router.db file format is as folows (all fields are required):
   [device_group]:[device_hostname]:[device_platform]:[authentication_set_name]:[connection_method]
   device_group allows for one-level directory tree in SVN (devices can be divided into some directories).
   device group field can be set to "none" for no device groupping.

   regarding supported device_platform names: currently only cisco (IOS standart), cat5 (CatOS),
   mlx (Foundry/Brocade Net Iron MLX), and junos (Juniper JUNOS) are supported out of the box. 
   for other devices - appropriate expect scripts must be created. 
   (see README file in the "helpers" directory).

   supported connection methods are: telnet, ssh1 (ssh v1), ssh2 (ssh v2), snmp (only for cisco devices)

 - device hostnames must resolve to valid IP's allowing telnet/ssh to connect to a particular device.

 - for syslog-triggered archiving to work - device hostname must be same in the config event syslog message,
   as in the router.db database. to achieve this - devices must generate syslog messages from IP address
   that resolve (via hosts or dns) to proper hostnames from router.db. all network devices 
   included in the router.db should be able to communicate with Archivist in some way: either send syslog 
   directly to Archivist via UDP, or send syslog to a syslog server which is logging messages to a logfile 
   that Archivist is told (and able) to tail. 


3. HOW TO TEST IT

 - if you only want to make scheduled config backups - edit config file, add:

   "ScheduleBackup <cron-style-period-definition> all"

   and then start Archivist. after schedule time has passed - check Archivist log file 
   for events like: "<hostname>: first time seen. adding device to svn repository."
   and for possible error messages. You can also try to make SVN checkout to see what is in the
   repository.
 
 - if you want to use syslog following - configure syslog following parameters (tail file or listen to UDP),
   and log in to some router that is logging syslog messages to the syslog server used by Archivist.
   Then you must enter router configuration mode, and add some line to config 
   (ie. snmp-server chassis-id <somestring>  - if you don't use this for something in your network ),
   exit configuration mode, and observe Archivist log for syslog-triggered config download event logs.
 
 
4. SVN MIRRORING

I've made the decision that Archivist will not be able to commit to many repositories. Instead - you can
create yourself as many "secondary" repositories as you like, and synchronize them via svnsync as often
as you like to main repository that archivist is working on.


**********************
